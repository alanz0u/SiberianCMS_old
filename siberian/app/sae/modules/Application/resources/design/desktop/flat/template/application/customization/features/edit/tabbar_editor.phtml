<?php
$option = $this->getOptionValue();
$application = $this->getApplication();

if ($option->getValueId() === "customer_account") {
    $library = new Media_Model_Library();
    $library->find("customer_account", "name");
} else if ($option->getValueId() === "more_items") {
    $library = new Media_Model_Library();
    $library->find("more_items", "name");
} else {
    $library = $option->getLibrary();
}

$available_icons = [$library->getIcons()];

if ($option->getCode() === 'folder') {
    $a_option = new Application_Model_Option();
    $options = $a_option->findAll();
    foreach ($options as $other_option) {
        if ($other_option->getCode() === 'folder') {
            continue;
        }
        $new_icons = $other_option->getLibrary()->getIcons();
        $available_icons[] = $new_icons;
    }
}

$library = new Media_Model_Library();
$allIcons = $library->getAllFeatureIcons(null, false);

$layout_id = $application->getLayoutId();
$layout_model = new Application_Model_Layout_Homepage();
$layout = $layout_model->find($layout_id);

# Exporter
$can_export = Siberian_Exporter::isRegistered($option->getCode()) && (__get('export_enabled'));
$can_clearcache = Siberian_Cache::isRegistered($option->getCode()) && (APPLICATION_ENV !== 'production');

$option_object = $option->getObject();
$available_offline = $option_object->availableOffline();
$application_offline_enabled = ($application->getOfflineContent() == 1);

$cacheOutput = Zend_Registry::get("cacheOutput");

$featureCode = preg_replace("/\d/", '', $option->getCode());

?>

<div class="content_editor">
    <h3 class="title-editor border-blue text-center">
        <?php echo __('Page settings'); ?>

        <div class="action-buttons">
            <?php if ($can_export): ?>
                <button class="color-blue bt-header-right btn import-feature pull-right action-button">
                    <a href="/<?php echo $option->getDesktopUri() ?>export/value_id/<?php echo $option->getId() ?>">
                        <?php echo __('Export') ?>
                    </a>
                </button>
            <?php endif; ?>
            <?php if ($can_clearcache): ?>
                <button class="color-blue bt-header-right btn import-feature pull-right action-button">
                    <a class="clearcache"
                       href="/<?php echo $option->getDesktopUri() ?>clearcache/value_id/<?php echo $option->getId() ?>">
                        <?php echo __('Clear cache') ?>
                    </a>
                </button>
            <?php endif; ?>
        </div>

    </h3>
    <div id="icon_and_name"
         class="icon_and_name container-fluid first-row-feature">
        <div class="row">
            <div class="col-md-4 col-xs-4">
                <div class="col-icon-button">
                    <button type="button"
                            id="change_icon"
                            class="color-blue btn"
                            data-image="330"
                            data-style="area"
                            data-color="color">
                        <span class="edit-btn"><i class="fa fa-pencil"></i></span>
                        <img id="current_icon"
                             src="<?php echo $this->getIconUrl($option, '#ffffff'); ?>"
                             width="auto"
                             height="40"
                             data-image="<?php echo $option->getIconId(); ?>"
                             data-style="color-blue"
                             data-color="color"/>
                    </button>
                </div>
                <div class="col-icon-first">
                    <label for="tabbar_name"><?php echo __('Page name:'); ?></label>
                    <br/>
                    <input type="text"
                           id="tabbar_name"
                           class="input-flat"
                           name="tabbar_name"
                           value="<?php echo $option->getTabbarName(); ?>"/>
                    <input type="hidden"
                           id="tabbar_name_id"
                           name="option_value_id"
                           value="<?php echo $option->getId() ?>"/>
                </div>
            </div>

            <div class="col-md-2 col-xs-2">
                <label for="tabbar_subtitle"><?php echo __('Subtitle:'); ?></label>
                <br/>
                <input type="text"
                       id="tabbar_subtitle"
                       class="input-flat"
                       name="tabbar_subtitle"
                       value="<?php echo $option->getTabbarSubtitle(); ?>"/>
                <input type="hidden"
                       id="tabbar_subtitle_id"
                       name="option_value_id"
                       value="<?php echo $option->getId() ?>"/>
            </div>

            <?php if (is_numeric($option->getId())) : ?>
                <div class="col-md-6">

                    <?php if ($option->getCode() !== "tabbar_account"): ?>
                        <div class="tabbar-check check-activated">
                            <label data-toggle="tooltip"
                                   class="display_tooltip"
                                   title="<?php echo p__js("application", "When not published, this feature is not accessible in menu & in-app links.", '"') ?>"><?php echo p__("application", "Published"); ?></label>
                            <br/>
                            <div id="toggle_feature_is_activated">
                                <div style="width:54px;padding-top:4px">
                                    <input class="sb-tgl sb-tgl-flat feature_is_activated color-blue checkbox"
                                           id="chk_activate"
                                           type="checkbox" <?php echo ($option->getIsActive()) ? 'checked="checked"' : '' ?> />
                                    <label class="sb-tgl-btn color-blue"
                                           for="chk_activate"></label>
                                    <input type="hidden"
                                           id="is_active"
                                           name="is_active"
                                           value="<?php echo $option->getIsActive() ?>"/>
                                    <input type="hidden"
                                           name="value_id"
                                           value="<?php echo $option->getId(); ?>"/>
                                </div>
                            </div>
                        </div>
                    <?php endif; ?>

                    <?php if (empty($option->getFolderId())): ?>
                        <div class="tabbar-check check-visible">
                            <label data-toggle="tooltip"
                                   class="display_tooltip"
                                   title="<?php echo p__js("application", "When disabled, this feature will only be accessible via in-app links.", '"') ?>"><?php echo p__("application", "Available from menu"); ?></label>
                            <br/>
                            <div id="toggle_feature_is_visible">
                                <div style="width:54px;padding-top:4px">
                                    <input class="sb-tgl sb-tgl-flat feature_is_visible color-blue checkbox"
                                           id="chk_visible"
                                           type="checkbox" <?php echo ($option->getIsVisible()) ? 'checked="checked"' : '' ?> />
                                    <label class="sb-tgl-btn color-blue"
                                           for="chk_visible"></label>
                                    <input type="hidden"
                                           id="is_visible"
                                           name="is_visible"
                                           value="<?php echo $option->getIsVisible() ?>"/>
                                    <input type="hidden"
                                           name="value_id"
                                           value="<?php echo $option->getId(); ?>"/>
                                </div>
                            </div>
                        </div>
                    <?php endif; ?>

                    <div class="tabbar-check check-socialsharing">
                        <?php if ($option->getSocialSharingIsAvailable() == 1) : ?>
                            <label><?php echo p__("application", "Social sharing"); ?></label>
                            <br/>
                            <div id="toggle_social_sharing_is_activated">
                                <div style="width:54px;padding-top:4px">
                                    <input class="sb-tgl sb-tgl-flat social_sharing_is_activated color-blue checkbox"
                                           id="chk_activate_social_sharing"
                                           type="checkbox"
                                        <?php if ($option->getSocialSharingIsActive()) echo 'checked="checked"'; ?> />
                                    <label class="sb-tgl-btn color-blue"
                                           for="chk_activate_social_sharing"></label>
                                    <input type="hidden"
                                           id="is_social_sharing_active"
                                           name="is_social_sharing_active"
                                           value=""/>
                                    <input type="hidden"
                                           name="value_id"
                                           value="<?php echo $option->getId(); ?>"/>
                                </div>
                            </div>
                        <?php endif; ?>
                    </div>
                </div>
            <?php endif; ?>
        </div>
    </div>

    <!-- Icons modal -->
    <div id="icon_library_manager"
         class="custom_modal icon_library_manager"
         style="display:none;">
        <div id="modal_mask_icon_library_manager"
             class="modal_mask close_modal close_modal_icon_library_manager"></div>
        <div>
            <div id="icon_library"
                 class="modal_content inner_content">
                <span class="pull-right"
                      style="margin-right: 8px;">
                    <button class="bt_close_modal_icons close_modal_icon_library_manager"
                            type="button">
                        <i class="fa fa-times"></i>
                    </button>
                </span>
                <h3 class="title-editor border-blue no-border-radius text-center">
                    <?php echo __('Manage icons'); ?>
                </h3>
                <div class="details">
                    <div class="container-fluid content-color">
                        <div class="row">
                            <div class="col-md-12">
                                <h3 class="subtitle">
                                    <span>
                                        <?php echo __("Feature icons") ?>
                                        <div id="new_icon">
                                            <div class="upload_icon icon btn color-blue"
                                                 rel="<?php echo $option->getId(); ?>"
                                                 type="button">
                                                <?php echo __("Add a new icon") ?>
                                            </div>
                                            <span id="input_upload_custom_icon_message"
                                                  style="display:none"><?php echo __("Add a new icon") ?></span>
                                            <input id="input_upload_custom_icon"
                                                   class="uploader"
                                                   style="display: none;"
                                                   type="file"
                                                   name="files[]"
                                                   data-url="/template/crop/upload">
                                        </div>
                                    </span>
                                </h3>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <ul class="icons_list feature_icons_default">
                                    <?php
                                        $icon_ids = [];
                                        // Prevent duped
                                        $iconUrls = [];
                                    ?>
                                    <?php foreach ($available_icons as $lib_icon) : ?>
                                        <?php foreach ($lib_icon as $icon) : ?>
                                            <?php if ($icon->getUrl() &&
                                                (!$icon->getAppId() || $icon->getAppId() == $application->getId()) &&
                                                !in_array($icon->getId(), $icon_ids)) : ?>

                                            <?php
                                                if (!$icon->checkFile() || in_array($icon->getUrl(), $iconUrls, true)) {
                                                    continue;
                                                }

                                                $_tmpUrl = $icon->getRelativePath();
                                                $iconUrls[] = $_tmpUrl;
                                            ?>

                                                <li rel="<?php echo $option->getId(); ?>"
                                                    class="color-blue">
                                                    <a href="/application/customization_features/seticon"
                                                       class="left icon"
                                                       rel="<?php echo $option->getId(); ?>">

                                                        <button class="select_icon icn not-preload"
                                                                style="background-image: url(<?php echo $_tmpUrl ?>);"
                                                                type="button">
                                                            <img src="/app/sae/design/desktop/flat/images/placeholder/blank-512.png"
                                                                 class="colorize img-icon-size"/>
                                                        </button>

                                                        <input type="hidden"
                                                               name="option_value_id"
                                                               value="<?php echo $option->getValueId(); ?>"/>
                                                        <input type="hidden"
                                                               name="icon_id"
                                                               value="<?php echo $icon->getId(); ?>"/>
                                                    </a>
                                                    <?php if ($icon->getAppId()) : ?>
                                                        <a href="/application/customization_features/deleteicon"
                                                           class="delete_icon">
                                                            <i class="fa fa-times"></i>
                                                            <input type="hidden"
                                                                   name="option_value_id"
                                                                   value="<?php echo $option->getValueId(); ?>"/>
                                                            <input type="hidden"
                                                                   name="icon_id"
                                                                   value="<?php echo $icon->getId(); ?>"/>
                                                        </a>
                                                    <?php endif; ?>

                                                </li>
                                                <?php $icon_ids[] = $icon->getId() ?>
                                            <?php endif; ?>
                                        <?php endforeach; ?>
                                    <?php endforeach; ?>
                                </ul>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <h3 class="subtitle">
                                    <span><?php echo __('Library icons') ?></span>
                                </h3>
                                <div class="form-group filter-icons">
                                    <input type="text"
                                           class="input-flat"
                                           style="width: 200px;"
                                           placeholder="<?php echo p__('icons', 'Search by keywords...') ?>"/>
                                    <button class="btn color-blue clear"><?php echo p__('icons', 'Clear') ?></button>
                                    <button class="btn btn-primary default-set"><?php echo p__('icons', 'Default feature set') ?></button>
                                    <button class="btn btn-danger all-icons"><?php echo p__('icons', 'Show all icons') ?></button>
                                </div>
                            </div>
                        </div>
                        <?php if (!$cacheOutput->start("all_feature_icons")): ?>
                            <div class="row">
                                <div class="filter-empty col-md-12">
                                    <div class="alert alert-info">
                                        <?php echo p__('icons', 'Start to type in the input box up there to search within the icons library.') ?>
                                    </div>
                                </div>
                                <div class="filter-no-results col-md-12"
                                     style="display: none;">
                                    <div class="alert alert-warning">
                                        <?php echo p__('icons', 'No results available for the current filter.') ?>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <ul class="icons_list filter_list">
                                        <?php
                                        $allIconIds = [];
                                        // Prevent duped
                                        $iconUrls = [];
                                        ?>
                                        <?php foreach ($allIcons as $icon) :
                                            $keywords = $icon->getFilterKeywords();

                                            if (!$icon->checkFile() || in_array($icon->getRelativePath(), $iconUrls, true)) {
                                                continue;
                                            }
                                            $_tmpUrl = $icon->getRelativePath();
                                            $iconUrls[] = $_tmpUrl;
                                            ?>

                                            <?php if ($_tmpUrl && !in_array($icon->getId(), $allIconIds)) : ?>
                                                <li data-filter="<?php echo $keywords ?>"
                                                    style="display: none;"
                                                    rel="#OPTION_VALUE_ID#"
                                                    class="<?php echo ($icon->getCanBeColorized() == 0) ? "colorizable" : "color-blue"; ?>">
                                                    <a href="/application/customization_features/seticon"
                                                       class="left icon"
                                                       rel="#OPTION_VALUE_ID#">
                                                        <button class="select_icon icn not-preload"
                                                                data-src="<?php echo $_tmpUrl ?>"
                                                                type="button">
                                                            <img src="/app/sae/design/desktop/flat/images/customization/ajax/eclipse-loader-3s.svg"
                                                                 class="colorize img-icon-size not-preload"/>
                                                        </button>
                                                        <input type="hidden"
                                                               name="option_value_id"
                                                               value="#OPTION_VALUE_ID#" />
                                                        <input type="hidden"
                                                               name="icon_id"
                                                               value="<?php echo $icon->getId(); ?>"/>
                                                    </a>
                                                    <?php if ($icon->getAppId()) : ?>
                                                        <a href="/application/customization_features/deleteicon"
                                                           class="delete_icon">
                                                            <i class="fa fa-times"></i>
                                                            <input type="hidden"
                                                                   name="option_value_id"
                                                                   value="#OPTION_VALUE_ID#"/>
                                                            <input type="hidden"
                                                                   name="icon_id"
                                                                   value="<?php echo $icon->getId(); ?>"/>
                                                        </a>
                                                    <?php endif; ?>

                                                </li>
                                                <?php $allIconIds[] = $icon->getId() ?>
                                            <?php endif; ?>
                                        <?php endforeach; ?>
                                    </ul>
                                </div>
                            </div>
                            <?php $cacheOutput->end(["all_feature_icons"]); endif; ?>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /Icons modal -->


    <div class="edit_page container-fluid subcontent">
        <?php echo $this->getPartialHtml('content_editor'); ?>
    </div>
    <script type="text/javascript">

        function iconsLoaderDebounce(func, wait, immediate) {
            var timeout;
            return function() {
                var context = this, args = arguments;
                var later = function() {
                    timeout = null;
                    if (!immediate) func.apply(context, args);
                };
                var callNow = immediate && !timeout;
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
                if (callNow) func.apply(context, args);
            };
        };

        window.custom_icon_uploader = new Uploader();

        let optionValueId = "<?php echo $option->getValueId(); ?>";

        let toReplaceRelValueId = $("[rel='#OPTION_VALUE_ID#']");
        let toReplaceValueValueId = $("[value='#OPTION_VALUE_ID#']");

        toReplaceRelValueId.attr("rel", optionValueId);
        toReplaceValueValueId.attr("value", optionValueId);

        page.setCallback('bind_icons_events', function () {
            $('.feature_is_activated').change(function () {
                let isChecked = $('#chk_activate').is(':checked') ? 1 : 0;
                $("#is_active").val(isChecked);
                reload(this.parentNode, '/application/customization_features/setisactive', true, function (datas) {
                    if (datas.success) {
                        iframe.f.reloadTabbar();
                    }
                });
            });

            $('.feature_is_visible').change(function () {
                let isChecked = $('#chk_visible').is(':checked') ? 1 : 0;
                $("#is_visible").val(isChecked);
                let parent = $(this.parentNode);
                reload(this.parentNode, '/application/customization_features/setisactive', true, function (datas) {
                    if (datas.success) {
                        iframe.f.reloadTabbar();
                        let valueId = parent.find("[name='value_id']").val();
                        if (isChecked) {
                            $(".feature-visible[rel='" + valueId + "']").hide();
                        } else {
                            $(".feature-visible[rel='" + valueId + "']").show();
                        }
                    }
                });
            });

            $('.social_sharing_is_activated').change(function () {
                let is_checked = $('#chk_activate_social_sharing').is(':checked') ? 1 : 0;
                $("#is_social_sharing_active").val(is_checked);
                reload(this.parentNode, '/application/customization_features/setisactive', true, function (datas) {
                    if (datas.success) {
                        iframe.f.reloadTabbar();
                    }
                });
            });

            let icon_library = {
                tolerance: 180,
                mask: null,
                processEvents: function () {
                    $('#change_icon').unbind('click');
                    $('#change_icon').click(function () {
                        icon_library.open($(this).attr('rel'));
                    });

                    $('.close_modal_icon_library_manager').unbind('click');
                    $('.close_modal_icon_library_manager').click(function () {
                        icon_library.close(true);
                    });
                },
                open: function (id) {
                    $(document).keyup(function (e) {
                        if (e.which == 27) icon_library.close(true);
                    });

                    $(window).unbind('resize');
                    $(window).resize(this.resize.bind(this));

                    this.resize();

                    $('#icon_library_manager').fadeIn();
                    if (!$('#icon_library .upload_icon').is(':visible')) {
                        $('#input_upload_custom_icon_message').show();
                        $('#input_upload_custom_icon').show();
                    }
                },
                close: function (animated) {
                    if (animated) {
                        $('#icon_library_manager').fadeOut(300, function () {
                        });
                    } else {
                        $('#icon_library_manager').hide();
                        $('.library').hide();
                    }
                    $(document).unbind('keyup');
                },
                resize: function (all) {
                    let selector = ".details";
                    if (!all) {
                        selector += ":visible";
                    }
                    $('#icon_library').css('height', $(window).outerHeight() - 75);
                    $('#icon_library_manager').find(selector).css('height', $(window).outerHeight() - this.tolerance);
                }
            }

            icon_library.processEvents();

            //Ajout d'un icône
            $("#icon_library").on("click", ".icon", function (e) {
                e.stopImmediatePropagation();
                reload($(this), this.href, true, function (datas) {
                    if (datas.success) {
                        updateLayout(datas);
                        icon_library.close();
                    }
                });
                return false;
            });

            // Suppression d'un icône
            $("#icon_library").on("click", ".delete_icon", function (e) {
                e.stopImmediatePropagation();
                var $icon = $(this);
                reload($(this), this.href, true, function (datas) {
                    if (datas.success) {
                        $icon.parent().fadeOut(600, function () {
                            $icon.parent().remove();
                        });
                    }
                });

                return false;
            });

            $('#icon_library .upload_icon').off("click");
            $('#icon_library .upload_icon').on("click", function (e) {
                e.stopImmediatePropagation();
                $('#input_upload_custom_icon').trigger("click");
            });

            $('#input_upload_custom_icon').fileupload({
                dataType: "json",
                add: function (e, data) {
                    data.submit();
                    custom_icon_uploader.showProgressbar();
                },
                progressall: function (e, data) {
                    custom_icon_uploader.moveProgressbar(data);
                },
                fail: function (el, data) {
                    custom_icon_uploader.hide();
                    custom_icon_uploader.showError(JSON.parse(data.jqXHR.responseText).message);
                },
                done: function (e, data) {
                    if (data.result.error) {
                        custom_icon_uploader.hide();
                        custom_icon_uploader.showError(data.result.message);
                    }

                    if (data.result.success) {
                        custom_icon_uploader.hide();
                        let params = [];
                        params["url"] = '/template/crop/crop';
                        params["file"] = data.result.files;
                        params["option_value_id"] = '<?php echo $option->getId() ?>';
                        params["output_w"] = "<?php echo $this->getIconWidth(); ?>";
                        params["output_h"] = "<?php echo $this->getIconHeight(); ?>";
                        params["output_url"] = '<?php echo str_replace('/', '$', '/application/customization_features/uploadicon') ?>';
                        params["uploader"] = "window.custom_icon_uploader";
                        params["image_color"] = '<?php echo $application->getBlock('tabbar')->getImageColor(); ?>';
                        params["is_colorizable"] = true;
                        custom_icon_uploader.callback = function (files) {
                            console.log("custom_icon_uploader.callback", files);
                            let img_src = '<?php echo Media_Model_Library_Image::getImagePathTo('/', $application->getId()) ?>' + files.file;
                            $('.icons_list').append('<li class="newly_added left relative">\n\
                                <a rel="<?php echo $option->getId(); ?>" class="left icon" href="/application/customization_features/seticon">\n\
                                    <button class="select_icon btn" type="button">\n\
                                        <img width="65" height="65" class="colorize" src="' + img_src + '">\n\
                                    </button>\n\
                                    <input type="hidden" value="<?php echo $option->getId(); ?>" name="option_value_id">\n\
                                    <input type="hidden" value="' + files.icon_id + '" name="icon_id">\n\
                                </a>\n\
                                <a href="/application/customization_features/deleteicon" class="delete_icon">\n\
                                    <i class="fa fa-times"></i>\n\
                                    <input type="hidden" name="option_value_id" value="<?php echo $option->getValueId(); ?>" />\n\
                                    <input type="hidden" name="icon_id" value="' + files.icon_id + '" />\n\
                                </a>\n\
                                </li>');
                            updateLayout(files);
                        };
                        custom_icon_uploader.crop(params);
                    }
                }
            });

            /**
             * Live update on carousel icon & app (if visible)
             */
            function updateLayout(datas) {
                //your pages
                $('#icon_<?php echo $option->getId(); ?>')
                    .attr('src', datas.icon_url_colorized)
                    .attr('data-image', datas.icon_id);
                $('#current_icon').attr('src', datas.icon_url);
                $('#change_icon').removeClass('open');
                $('#icons').slideUp();
                try {
                    iframe.f.changeIcon(datas.value_id, datas.icon_url_colorized_app);
                } catch (e) {
                    // Silent noop!
                }
            }

            $('#tabbar_name').keyup(function (e) {
                if (e.keyCode === 13) {
                    this.blur();
                } else {
                    let val = $(this).val().trim();
                    let subval = val;
                    //if (subval.length > 8) subval = subval.substring(0, 3).trim() + '...' + subval.substring(subval.length - 4, subval.length).trim();
                    $('#tabbar_name_<?php echo $option->getId(); ?>').html(subval);

                    try {
                        // Live update menu in overview
                        let valueId = $("#tabbar_name_id").val();
                        let navItem = iframe.f.document.querySelector("[tabbar-items][data-value-id='" + valueId + "'] p");
                        if (navItem) {
                            navItem.textContent = val;
                        }
                    } catch (e) {
                        // Nope, not available
                    }

                    $('#title_editor').html(val);
                }
            }).change(function () {
                let val = $(this).val();
                let tabbar_name_loader = $('#loader_' + $(this).attr('id'));
                let subval = val;
                //if (subval.length > 8) subval = subval.substring(0, 3).trim() + '...' + subval.substring(subval.length - 4, subval.length).trim();
                $('#tabbar_name_<?php echo $option->getId(); ?>').html(subval);
                tabbar_name_loader.show();
                reload(this.parentNode, '/application/customization_features/settabbarname', false, function (datas) {
                    if (datas.success) {
                        tabbar_names['<?php echo $option->getId(); ?>'] = val;
                        iframe.f.reload();
                    }
                    tabbar_name_loader.hide();
                }, function (datas) {
                    iframe.content.find('.tabbar_name_<?php echo $option->getId(); ?>').html(tabbar_names['<?php echo $option->getId(); ?>']);
                    $('#tabbar_name_<?php echo $option->getId(); ?>').html(tabbar_names['<?php echo $option->getId(); ?>']);
                    $(this).val(tabbar_names['<?php echo $option->getId(); ?>']);
                    tabbar_name_loader.hide();
                }.bind(this));
            });

            $('#tabbar_subtitle').keyup(function (e) {
                if (e.keyCode == 13) {
                    this.blur();
                } else {
                    var val = $(this).val().trim();
                    var subval = val;
                    if (subval.length > 8) subval = subval.substring(0, 3).trim() + '...' + subval.substring(subval.length - 4, subval.length).trim();
                    $('#tabbar_subtitle_<?php echo $option->getId(); ?>').html(subval);
                }
            }).change(function () {
                var val = $(this).val();
                var tabbar_subtitle_loader = $('#loader_' + $(this).attr('id'));
                var subval = val;
                if (subval.length > 8) subval = subval.substring(0, 3).trim() + '...' + subval.substring(subval.length - 4, subval.length).trim();
                $('#tabbar_subtitle_<?php echo $option->getId(); ?>').html(subval);
                tabbar_subtitle_loader.show();
                reload(this.parentNode, '/application/customization_features/settabbarsubtitle', false, function (datas) {
                    tabbar_subtitle_loader.hide();
                }, function (datas) {
                    tabbar_subtitle_loader.hide();
                }.bind(this));
            });
        });

        page.setCallback('unbind_icons_events', function () {
            $('.feature_is_activated').unbind('change');
            <?php if($option->getLibrary()->getId()) : ?>
            $('.icon').unbind('click');
            $('#change_icon').unbind('keyup').unbind('blur');
            <?php endif; ?>
            $('#tabbar_name').unbind('keyup').unbind('blur');
        });

        var filterEmpty = $('.filter-empty');
        var filterNoResults = $('.filter-no-results');

        var iconsSearchText = $('.filter-icons input[type=text]');
        var iconsCache = $('.filter_list li[data-filter]');

        /** Caching icons filter */
        iconsCache.each(function () {
            var el = $(this);
            el.data('filter-san', el.data('filter').normalize("NFD").replace(/[\u0300-\u036f]/g, "").toLowerCase());
        });

        /** Icon filtering */

        var defaultValue = '<?php echo addcslashes($featureCode, "'") ?>';

        iconsSearchText.off('keyup');
        iconsSearchText.on('keyup', iconsLoaderDebounce(function () {
            var search = $(this);
            // remove any accents, then lowercase
            var value = search.val().normalize("NFD").replace(/[\u0300-\u036f]/g, "").toLowerCase();
            var searchValues = value.split(/[^a-z]+/i);

            // At least two characters
            if (value.length < 2) {
                // Clear Icons & SRC
                clearIconsSrc();

                filterEmpty.show();
                filterNoResults.hide();
            } else {
                iconsCache.hide();
                filterEmpty.hide();
                filterNoResults.hide();
                var gotOne = false;
                iconsCache.each(function () {
                    var el = $(this);
                    var filters = el.data('filter-san');

                    searchValues.forEach(function (searchValue) {
                        if (filters.indexOf(searchValue) > -1) {
                            gotOne = true;
                            el.show();
                        }
                    });

                });
                if (!gotOne) {
                    filterNoResults.show();
                }
            }
        }, 600));

        // clear icons
        var clearIconsSrc = function () {
            iconsCache.hide();
        };

        var allIcons = $('.filter-icons button.all-icons');

        function splitArrayIntoChunksOfLen(arr, len) {
            var chunks = [], i = 0, n = arr.length;
            while (i < n) {
                chunks.push(arr.slice(i, i += len));
            }
            return chunks;
        }

        var showAllIcons = function () {
            var chunks = splitArrayIntoChunksOfLen(iconsCache, 20);

            var asyncTimedLoopShow = function () {
                if (chunks.length <= 0) {
                    return;
                }
                setTimeout(function () {
                    chunks.shift().show();
                    asyncTimedLoopShow();
                }, 20);
            };
            asyncTimedLoopShow();
        };

        allIcons.off('click');
        allIcons.on('click', function () {
            filterNoResults.hide();
            filterEmpty.hide();
            iconsCache.hide();
            iconsSearchText.val('');
            showAllIcons();
        });

        var filterIcons = $(".filter-icons button.clear");

        filterIcons.off('click');
        filterIcons.on('click', function () {
            iconsSearchText.val('');
            // Clear Icons & SRC
            clearIconsSrc();

            filterNoResults.hide();
            filterEmpty.show();
        });

        var defaultIcons = $(".filter-icons button.default-set");

        defaultIcons.off('click');
        defaultIcons.on('click', function () {
            iconsSearchText.val(defaultValue);
            iconsSearchText.trigger('keyup');
        });

        /** Clearcache action */
        var clearCache = $('.clearcache');

        clearCache.off('click');
        clearCache.on('click', function (e) {
            e.preventDefault();

            var el = $(this);

            simpleget(el.attr('href'));

            return false;
        });

        // Load window.feature_links
        $.ajax({
            url: '/application/customization_features/links',
            method: 'GET',
            dataType: 'json',
            success: function (data) {
                window.feature_links = data;
            }
        });

        $('.display_tooltip').tooltip();

        // Observer to lazy load images as they display
        var observer = new IntersectionObserver(
            (entries, observer) => {
                entries.forEach(entry => {
                    if (entry.intersectionRatio > 0.0) {
                        var button = entry.target;
                        if (button.style.backgroundImage.length < 1) {
                            var preLoadImage = new Image();
                            preLoadImage.onload = function() {
                                // There is only the blank img!
                                button.firstElementChild.src = '/app/sae/design/desktop/flat/images/placeholder/blank-512.png';
                                button.style.backgroundImage = 'url('+button.dataset.src+')';
                            };
                            preLoadImage.src = button.dataset.src;

                            // Stop observing
                            observer.unobserve(button);
                        }
                    }
                });
            },
            {}
        );
        for (let button of document.querySelectorAll('.filter_list button.not-preload')) {
            observer.observe(button);
        }

        var defaultOption = '<?php echo __get('icons_library_default_filter') ?? 'feature' ?>';

        switch (defaultOption) {
            default:
                // Triggers a default search
                $('.filter-icons input').val(defaultValue).trigger('keyup');
                break;
            case 'none':
                // Do nothing
                break;
            case 'all':
                showAllIcons();
                break;
        }

    </script>
    <style type="text/css">
        .custom_modal .modal_content li {
            margin: 5px;
            background: #0099C7;
            color: white;
            float: left;
            list-style: none;
            border-radius: 3px;
            position: relative;
        }

        .custom_modal .modal_content img {
            padding: 8px;
        }

        .custom_modal .modal_content .icons_list li { /*padding: 15px;*/
        }

        .custom_modal .modal_content li .select_icon {
            background: none;
            color: white;
            border: none;
        }

        .custom_modal .modal_content li .delete_icon {
            position: absolute;
            top: 0;
            right: 5px;
        }

        .custom_modal .modal_content .container-fluid {
            padding-bottom: 20px;
        }

        .custom_modal .bt_close_modal_icons {
            border: none;
            background: transparent;
            font-size: 25px;
        }

        #icon_and_name .col-icon-button {
            padding-top: 1px;
            width: 70px;
            position: absolute;
            left: 15px;
        }

        #change_icon {
            padding: 9px !important;
        }

        #icon_library {
            overflow-y: scroll;
        }

        #new_icon {
            float: right;
            font-size: 16px;
        }

        .no-offline, .partial-offline {
            font-size: 14px;
            position: absolute;
            left: 15px;
            color: #a00b0b;
            text-transform: none;
            font-weight: 200;
        }

        .partial-offline {
            color: #0e7aa0;
        }

        .tooltip {
            text-transform: none;
        }

        .no-offline i, .partial-offline i {
            font-size: 20px;
        }

        .no-offline span, .partial-offline span {
            top: 3px;
            position: absolute;
            left: 24px;
            width: 400px;
            text-align: left;
        }

        .col-icon-first {
            padding-left: 70px;
        }

        #icon_library .delete_icon {
            z-index: 1000;
        }

        .tabbar-check {
            float: right;
            text-align: center;
            margin-left: 15px;
            display: inline-block;
        }

        .tabbar-check > div {
            display: inline-block;
        }

        .icn {
            background-size: contain !important;
            background-repeat: no-repeat !important;
            display: inline-block;
            padding: 0;
            margin-bottom: 0;
        }

        ul.feature_icons_default li,
        ul.filter_list li {
            background-color: #a0a0a0 !important;
            padding: 10px !important;
        }

        img.img-icon-size {
            width: 96px;
            height: 96px;
        }

        ul.filter_list {
            display: flex;
            justify-content: flex-start;
            flex-wrap: wrap;
        }
    </style>
</div>
